[{"C:\\Restaurent_react\\rome-restaurant\\src\\index.js":"1","C:\\Restaurent_react\\rome-restaurant\\src\\reportWebVitals.js":"2","C:\\Restaurent_react\\rome-restaurant\\src\\App.js":"3","C:\\Restaurent_react\\rome-restaurant\\src\\SignUp_SignIn\\RegisterLogIn.js":"4","C:\\Restaurent_react\\rome-restaurant\\src\\Dashboard\\Dashboard.jsx":"5","C:\\Restaurent_react\\rome-restaurant\\src\\components\\Order.js":"6","C:\\Restaurent_react\\rome-restaurant\\src\\components\\Cart.js":"7","C:\\Restaurent_react\\rome-restaurant\\src\\Dashboard\\Carousel.jsx":"8","C:\\Restaurent_react\\rome-restaurant\\src\\Utils\\CountryValid.jsx":"9","C:\\Restaurent_react\\rome-restaurant\\src\\Redux\\store.js":"10","C:\\Users\\Sai jadapalli\\Desktop\\rome-restaurant\\src\\index.js":"11","C:\\Users\\Sai jadapalli\\Desktop\\rome-restaurant\\src\\reportWebVitals.js":"12","C:\\Users\\Sai jadapalli\\Desktop\\rome-restaurant\\src\\App.js":"13","C:\\Users\\Sai jadapalli\\Desktop\\rome-restaurant\\src\\redux\\store.js":"14","C:\\Users\\Sai jadapalli\\Desktop\\rome-restaurant\\src\\components\\Cart.js":"15","C:\\Users\\Sai jadapalli\\Desktop\\rome-restaurant\\src\\SignUp_SignIn\\RegisterLogIn.js":"16","C:\\Users\\Sai jadapalli\\Desktop\\rome-restaurant\\src\\components\\Order.js":"17","C:\\Users\\Sai jadapalli\\Desktop\\rome-restaurant\\src\\Dashboard\\Dashboard.jsx":"18","C:\\Users\\Sai jadapalli\\Desktop\\rome-restaurant\\src\\redux\\reducers\\cartReducer.js":"19","C:\\Users\\Sai jadapalli\\Desktop\\rome-restaurant\\src\\Utils\\CountryValid.jsx":"20","C:\\Users\\Sai jadapalli\\Desktop\\rome-restaurant\\src\\Dashboard\\Carousel.jsx":"21","C:\\Users\\Sai jadapalli\\Desktop\\rome-restaurant\\src\\redux\\actions\\cartActions.js":"22"},{"size":627,"mtime":1700626215521,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1694583683785,"results":"25","hashOfConfig":"24"},{"size":3849,"mtime":1700548359339,"results":"26","hashOfConfig":"24"},{"size":16959,"mtime":1700113275204,"results":"27","hashOfConfig":"24"},{"size":6195,"mtime":1700626167809,"results":"28","hashOfConfig":"24"},{"size":635,"mtime":1698846856006,"results":"29","hashOfConfig":"24"},{"size":4228,"mtime":1700626149937,"results":"30","hashOfConfig":"24"},{"size":1660,"mtime":1698846895015,"results":"31","hashOfConfig":"24"},{"size":2010,"mtime":1699183279966,"results":"32","hashOfConfig":"24"},{"size":161,"mtime":1700625194045,"results":"33","hashOfConfig":"24"},{"size":804,"mtime":1700628238988,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":1694583683785,"results":"36","hashOfConfig":"35"},{"size":2066,"mtime":1700633840658,"results":"37","hashOfConfig":"35"},{"size":172,"mtime":1700627806160,"results":"38","hashOfConfig":"35"},{"size":11813,"mtime":1700720162175,"results":"39","hashOfConfig":"35"},{"size":16971,"mtime":1700631386462,"results":"40","hashOfConfig":"35"},{"size":635,"mtime":1698846856006,"results":"41","hashOfConfig":"35"},{"size":6242,"mtime":1700636800230,"results":"42","hashOfConfig":"35"},{"size":1472,"mtime":1700629305813,"results":"43","hashOfConfig":"35"},{"size":2010,"mtime":1699183279966,"results":"44","hashOfConfig":"35"},{"size":1660,"mtime":1698846895015,"results":"45","hashOfConfig":"35"},{"size":419,"mtime":1700629293565,"results":"46","hashOfConfig":"35"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p4v36",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"sqcmrd",{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"83"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"83"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"C:\\Restaurent_react\\rome-restaurant\\src\\index.js",[],[],"C:\\Restaurent_react\\rome-restaurant\\src\\reportWebVitals.js",[],[],[],"C:\\Restaurent_react\\rome-restaurant\\src\\App.js",["119","120","121","122","123","124","125"],[],"import { useEffect, useState } from 'react';\nimport './App.css';\nimport RegisterLogIn from './SignUp_SignIn/RegisterLogIn';\nimport { ClipLoader } from 'react-spinners';\nimport Dashboard from './Dashboard/Dashboard';\nimport Cart from './components/Cart';\nimport Order from './components/Order';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\n\n\n\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [selectedSubcategory, setSelectedSubcategory] = useState('');\n  const [filteredItems, setFilteredItems] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n  const [isOrderPlaced, setIsOrderPlaced] = useState(false);\n  const [item, setItems] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n      setData(<RegisterLogIn />)\n      setLoading(true)\n    }, 800);\n  }, [])\n  const getItems = async () => {\n    const itemUrl = 'http://localhost:8081/v1/users/items';\n    try {\n      const itemsFromDataBsse = await axios.get(itemUrl);\n      setItems(itemsFromDataBsse.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  const handleCategoryChange = (category) => {\n    setSelectedCategory(category);\n    setFilteredItems([]);\n    setSelectedSubcategory('');\n  };\n\n  const handleSubcategoryChange = (subcategory) => {\n    setSelectedSubcategory(subcategory);\n    const itemsForSubcategory = item.filter((item) => item.subcategoryId === subcategory);\n    setFilteredItems(itemsForSubcategory);\n  };\n\n  const handleAddToCart = (item) => {\n    // Check if the item is already in the cart\n    const existingItem = cartItems.find((cartItem) => cartItem.itemId === item.itemId);\n    if (existingItem) {\n      // Increase the quantity of the existing item in the cart\n      existingItem.quantity += 1;\n      setCartItems([...cartItems]);\n    } else {\n\n      // Add the item to the cart with quantity 1\n      setCartItems([...cartItems, { ...item, quantity: 1 }]);\n    }\n  };\n\n  const handleRemoveFromCart = (itemId) => {\n    const updatedCart = cartItems.filter((item) => item.itemId !== itemId);\n    setCartItems(updatedCart);\n  };\n\n  const handleIncreaseQuantity = (item) => {\n    item.quantity += 1;\n    setCartItems([...cartItems]);\n  };\n\n  const handleDecreaseQuantity = (item) => {\n    if (item.quantity > 1) {\n      item.quantity -= 1;\n      setCartItems([...cartItems]);\n    } else {\n      handleRemoveFromCart(item.id); // Remove the item if the quantity is 0\n    }\n  };\n\n  const handlePlaceOrder = () => {\n    // Perform order placement logic, e.g., sending data to a server\n    setIsOrderPlaced(true);\n  };\n  const [cartSize, setCartSize] = useState(0);\n  const handleCartSizeChange = (size) => {\n    setCartSize(size);\n  };\n\n\n  return (\n\n    <>\n\n      {loading ? <Routes>\n        <Route path='/' element={<RegisterLogIn />} />\n        <Route path='/success' element={\n          <Dashboard onAddToCart={handleAddToCart} cartSize={cartSize} /> } />\n        <Route path='/cart' element={<Cart\n          cartItems={cartItems}\n          onRemoveFromCart={handleRemoveFromCart}\n          onIncreaseQuantity={handleIncreaseQuantity}\n          onDecreaseQuantity={handleDecreaseQuantity}\n          handleCartSizeChange={\n            handleCartSizeChange\n          }\n        />} />\n        <Route path='/place-order' element={<>\n          <Order cartItems={cartItems} onPlaceOrder={handlePlaceOrder} />\n          {isOrderPlaced && <p>Order placed successfully!</p>}</>} />\n      </Routes> || data : <div className='loadingJs'>\n        <ClipLoader color=\"#36d7b7\" size={50} />\n      </div>}\n\n    </>\n  );\n}\n\nexport default App;\n","C:\\Restaurent_react\\rome-restaurant\\src\\SignUp_SignIn\\RegisterLogIn.js",["126","127","128","129"],[],"import React, { useState, useEffect } from \"react\";\r\nimport './RegisterLogIn.css'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckCircle, faEarthAmericas, faEnvelope, faLocationDot, faLock, faPhone, faThumbTack, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport WOW from 'wowjs';\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport CountryValid from \"../Utils/CountryValid\";\r\n\r\n\r\nexport default function RegisterLogIn() {\r\n   const [show, setshow] = useState(true);\r\n   const [data, setData] = useState({\r\n      userName: '',\r\n      userEmail: '',\r\n      userPhoneNo: '',\r\n      userCountry: '',\r\n      userAddress: '',\r\n      userPincode: '',\r\n      userPassword: ''\r\n   });\r\n\r\n   const [errors, setErrors] = useState({});\r\n   const navigate = useNavigate();\r\n\r\n   useEffect(() => {\r\n      new WOW.WOW({\r\n         live: false\r\n      }).init();\r\n      getUserDetails();\r\n\r\n   }, [])\r\n\r\n   const getUserDetails = async () => {\r\n      try {\r\n         const res = await axios.get(\"http://localhost:8081/v1/users\")\r\n         console.log(res.data)\r\n      } catch (error) {\r\n         console.log(error.message)\r\n      }\r\n   }\r\n\r\n   const handleChange = (e) => {\r\n\r\n      setData(prev => ({\r\n         ...prev,\r\n         [e.target.name]: e.target.value\r\n\r\n      }))\r\n\r\n   }\r\n\r\n\r\n\r\n   //REGISTER\r\n   const handleRegister = (e) => {\r\n      e.preventDefault();\r\n\r\n\r\n      // Replace with your API endpoint\r\n      const apiUrl = 'http://localhost:8081/v1/user/register';\r\n\r\n      // Replace with your Basic Authentication credentials\r\n      const username = 'ramesh';\r\n      const password = 'Ramesh#123';\r\n      const basicAuthHeader = 'Basic ' + btoa(username + ':' + password);\r\n\r\n      const valid = formValidations(data);\r\n      if (valid === true) {\r\n         axios.post(apiUrl, data, {\r\n            headers: {\r\n               'Content-Type': 'application/json', // Set the content type if needed\r\n               'Authorization': basicAuthHeader, // Add the Basic Authentication header\r\n            },\r\n         })\r\n            .then(response => {\r\n               if (response.data === false) {\r\n                  document.getElementById(\"UserValidate\").style.display = \"block\";\r\n               }else{\r\n\r\n                  document.getElementById(\"UserRegistered\").style.display = \"block\";\r\n\r\n               }\r\n\r\n            })\r\n            .catch(error => {\r\n               console.log('Error fetching data:', error.response.data);\r\n            });\r\n      }\r\n   }\r\n\r\n   //LogIn\r\n\r\n   const handleLogin = (e) => {\r\n\r\n      e.preventDefault();\r\n\r\n      // Replace with your API endpoint\r\n      const apiUrl = 'http://localhost:8081/v1/users/login';\r\n\r\n      // Replace with your Basic Authentication credentials\r\n      const username = 'ramesh';\r\n      const password = 'Ramesh#123';\r\n      const basicAuthHeader = 'Basic ' + btoa(username + ':' + password);\r\n      const user = {\r\n         userEmail: \"ramesh\",\r\n         userPassword: \"ramesh\"\r\n      }\r\n\r\n      axios.post(apiUrl, data, {\r\n         headers: {\r\n            'Content-Type': 'application/json', // Set the content type if needed\r\n            'Authorization': basicAuthHeader, // Add the Basic Authentication header\r\n         },\r\n      })\r\n         .then(response => {\r\n            // console.log(response.status)\r\n            if (response.data === true) {\r\n               return navigate('/success')\r\n            } else {\r\n               document.getElementById(\"EmailOrPAssValid\").style.display = \"block\";\r\n            }\r\n\r\n         })\r\n         .catch(error => {\r\n            console.log('Error fetching data:', error)\r\n         });\r\n   }\r\n\r\n\r\n\r\n\r\n   const hangleBtnToggle = (change) => {\r\n      const btnChange = document.querySelector(change);\r\n      if (!btnChange.classList.contains('.btnToggle')) {\r\n         turnOffPreviousBtn();\r\n         btnChange.classList.add('btnToggle');\r\n      } else {\r\n         btnChange.classList.remove('btnToggle');\r\n      }\r\n   }\r\n\r\n   function turnOffPreviousBtn() {\r\n      const previousChange = document.querySelector('.btnToggle');\r\n      if (previousChange) {\r\n         previousChange.classList.remove('btnToggle');\r\n      }\r\n   }\r\n   return (\r\n      <>\r\n         <div className=\"backGround\">\r\n            <section className=\"bg-transparent navbar-bg\">\r\n               <div className=\"container\">\r\n                  {/* <button onClick={() => setshow(true)} class=\"nav-item nav-link\" href=\"#\">Login</button>\r\n                        <button onClick={() => setshow(false)} class=\"nav-item nav-link\" >SignUp</button> */}\r\n                  <Navbar expand='md' className=\"bg-transparent\">\r\n                     <Container fluid className=\"bannerHeight\">\r\n                        <Navbar.Brand> <img src=\"/images/Rome-logo.png\" alt=\"\" /></Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n                        <Navbar.Collapse id=\"navbarScroll\">\r\n                           <Nav\r\n                              className=\"ms-auto \"\r\n                              style={{ maxHeight: '100px' }}\r\n                              navbarScroll\r\n                           >\r\n                              <button onClick={() => {\r\n                                 setshow(false);\r\n                                 hangleBtnToggle('.SignUpBtn')\r\n                              }} className=\"me-4 headerBtns SignUpBtn \" >SignUp</button>\r\n                              <button onClick={() => { setshow(true); hangleBtnToggle('.LogInBtn') }} className=\"headerBtns LogInBtn\" >Login</button>\r\n                           </Nav>\r\n                        </Navbar.Collapse>\r\n                     </Container>\r\n                  </Navbar>\r\n               </div>\r\n            </section>\r\n            <div className=\"registerOrLogin\">\r\n               <div className=\"register\">\r\n\r\n               </div>\r\n               <div className=\"login wow  pulse\">\r\n                  <h3 /* style={{color: \"red\"}}*/ className=\" text-center text-light mb-4\">{show ? \"CUSTOMER LOGIN\" : \"SIGN UP\"}</h3>\r\n                  <form>\r\n                     {show ?\r\n                        <>\r\n                           <div class=\"form-group formInput \">\r\n                              <div className=\"faIcons\"><FontAwesomeIcon icon={faEnvelope} className=\"facolors\" /></div>\r\n                              <div className=\"inputDiv\">\r\n                                 <input type=\"text\" onChange={handleChange} name=\"userEmail\" class=\"form-control  bg-transparent\" placeholder=\"Email\" />\r\n                              </div>\r\n                           </div>\r\n                           <div class=\"form-group formInput\">\r\n                              <div className=\"faIcons\"><FontAwesomeIcon icon={faLock} className=\"facolors\" /></div>\r\n                              <div className=\"inputDiv\">\r\n                                 <input type=\"password\" name=\"userPassword\" onChange={handleChange} className=\"form-control bg-transparent loginPassword\" placeholder=\"Password\" /*onKeyUp={passwordJsSpan} onFocus={display} onBlur={displayoff}*/ />\r\n                              </div>\r\n\r\n                           </div>\r\n                           <span id=\"EmailOrPAssValid\" >Please Enter Valid Email And Password</span>\r\n\r\n                           <div className=\"formBtn text-center\">\r\n                              <button type=\"submit\" onClick={handleLogin} class=\"btn text-light bg-danger rounded-0 btn-sm\">LOGIN</button>\r\n                           </div>\r\n                        </> :\r\n                        <>\r\n                           <div class=\"form-group formInput \">\r\n                              <div className=\"faIcons\"><FontAwesomeIcon icon={faUser} className=\"facolors\" /></div>\r\n                              <div className=\"inputDiv\">\r\n                                 <input type=\"text\" class=\"form-control  bg-transparent\" placeholder=\"Name\" name=\"userName\" onChange={handleChange} />\r\n                              </div>\r\n                           </div>\r\n                           <span className=\"errorSpan\">{errors.userName}</span>\r\n                           <div class=\"form-group formInput\">\r\n                              <div className=\"faIcons\"><FontAwesomeIcon icon={faEnvelope} className=\"facolors\" /></div>\r\n                              <div className=\"inputDiv\">\r\n                                 <input type=\"email\" class=\"form-control bg-transparent\" placeholder=\"Email\" name=\"userEmail\" onChange={handleChange} />\r\n                              </div>\r\n                           </div>\r\n                           <span className=\"errorSpan\">{errors.userEmail}</span>\r\n                           <div class=\"form-group formInput \">\r\n                              <div className=\"faIcons\"><FontAwesomeIcon icon={faPhone} className=\"facolors\" /></div>\r\n                              <div className=\"inputDiv\">\r\n                                 <input type=\"text\" class=\"form-control  bg-transparent\" placeholder=\"Phone\" name=\"userPhoneNo\" onChange={handleChange} />\r\n                              </div>\r\n                           </div>\r\n                           <span className=\"errorSpan\">{errors.userPhoneNo}</span>\r\n                           <div class=\"form-group formInput \">\r\n                              <div className=\"faIcons\"><FontAwesomeIcon icon={faEarthAmericas} className=\"facolors\" /></div>\r\n                              <div className=\"inputDiv\">\r\n                                 <input type=\"text\" class=\"form-control  bg-transparent\" placeholder=\"Country\" name=\"userCountry\" onChange={handleChange} />\r\n                              </div>\r\n                           </div>\r\n                           <span className=\"errorSpan\">{errors.userCountry}</span>\r\n                           <div class=\"form-group formInput \">\r\n                              <div className=\"faIcons\"><FontAwesomeIcon icon={faLocationDot} className=\"facolors\" /></div>\r\n                              <div className=\"inputDiv\">\r\n                                 <input type=\"text\" class=\"form-control  bg-transparent\" placeholder=\"Address\" name=\"userAddress\" onChange={handleChange} />\r\n                              </div>\r\n                           </div>\r\n                           <span className=\"errorSpan\">{errors.userAddress}</span>\r\n                           <div class=\"form-group formInput \">\r\n                              <div className=\"faIcons\"><FontAwesomeIcon icon={faThumbTack} className=\"facolors\" /></div>\r\n                              <div className=\"inputDiv\">\r\n                                 <input type=\"text\" class=\"form-control  bg-transparent\" placeholder=\"Pincode\" name=\"userPincode\" onChange={handleChange} />\r\n                              </div>\r\n                           </div>\r\n                           <span className=\"errorSpan\">{errors.userPincode}</span>\r\n                           <div class=\"form-group formInput \">\r\n                              <div className=\"faIcons\"><FontAwesomeIcon icon={faLock} className=\"facolors\" /></div>\r\n                              <div className=\"inputDiv\">\r\n                                 <input type=\"password\" name=\"userPassword\" onChange={handleChange} className=\"form-control bg-transparent loginPassword\" placeholder=\"Password\" onKeyUp={passwordJsSpan} onKeyDown={display} onMouseLeave={displayoff} />\r\n                              </div>\r\n                           </div>\r\n                           <span className=\"errorSpan\">{errors.userPassword}</span>\r\n                           <span></span>\r\n                           <span id=\"passwordValidspan\">\r\n                              <span className=\"js-password\">- should contain min 8 charecters.</span><br />\r\n                              <span className=\"js-password\">- should contain lower and upper-cases. </span><br />\r\n                              <span className=\"js-password\">- should contain special charecters.</span><br />\r\n                              <span className=\"js-password\">- should contain atleast one number.</span>\r\n                           </span>\r\n\r\n\r\n                           <div className=\"formBtn text-center\">\r\n                              <button type=\"submit\" class=\"btn text-light bg-danger rounded-0 btn-sm\" onClick={handleRegister}>Register</button>\r\n                           </div>\r\n                           <span id=\"UserValidate\">user already exist please login</span>\r\n                           <span id=\"UserRegistered\">Registered Successfully<FontAwesomeIcon style={{ color: \"rgb(39, 224, 39)\", marginLeft: \"5\" }} icon={faCheckCircle} /></span>\r\n\r\n                        </>\r\n                     }\r\n                  </form>\r\n               </div>\r\n               <div className=\"registerdiv mt-3 text-center text-light\">\r\n                  <small >{show ? \"Don't have an account\" : \"Already have an account\"}</small>\r\n                  <div className=\"heCreateAcc mt-1 \">\r\n                     {show ?\r\n                        <button onClick={() => setshow(false)}\r\n                           className=\"btn btn-outline-light btn-sm fw-bold rounded-0  \">Create Account Now</button> : <button onClick={() => setshow(true)} className=\"btn btn-outline-light btn-sm fw-bold rounded-0  \">LogIn Here\r\n                        </button>}\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </>\r\n   )\r\n   function formValidations(data) {\r\n      const validCountries = CountryValid();\r\n      const userValidations = {};\r\n      const fieldIsRequired = \"Field Is Required\"\r\n      //UserName\r\n      if (!data.userName.trim()) {\r\n         userValidations.userName = fieldIsRequired;\r\n      }\r\n       //UserEmail\r\n      if (!data.userEmail.trim()) {\r\n         userValidations.userEmail = fieldIsRequired;\r\n      } else if (!data.userEmail.trim().match(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{3}$/)) {\r\n         userValidations.userEmail = \"Enter Valid Email\";\r\n      }\r\n       //UserPhonneno\r\n      if (!data.userPhoneNo.trim()) {\r\n         userValidations.userPhoneNo = fieldIsRequired;\r\n      } else if (!data.userPhoneNo.trim().match(/^[0-9]{10}$/)) {\r\n         userValidations.userPhoneNo = \"Enter Valid PhoneNo\";\r\n      }\r\n       //UserCountry\r\n      if (!data.userCountry.trim()) {\r\n         userValidations.userCountry = fieldIsRequired;\r\n      } else if (!validCountries.test(data.userCountry.trim())) {\r\n         userValidations.userCountry = \"Enter a valid country\";\r\n      }\r\n       //UserAddress\r\n      if (!data.userAddress.trim()) {\r\n         userValidations.userAddress = fieldIsRequired;\r\n      }\r\n\r\n       //UserPincode\r\n      if (!data.userPincode.trim()) {\r\n         userValidations.userPincode = fieldIsRequired;\r\n      } else if (!data.userPincode.trim().match(/^[0-9]/)) {\r\n         userValidations.userPincode = \"Enter a valid Pincode\";\r\n      }\r\n      //UserPassWord\r\n      const ele = document.getElementsByClassName(\"loginPassword\");\r\n      if (!data.userPassword.trim()) {\r\n         ele[0].style.marginBottom = \"0\";\r\n         userValidations.userPassword = fieldIsRequired;\r\n      } else if (!data.userPassword.trim().match(/[A-Z]/ && /[a-z]/ && /[!@#$%^&*()_+{}\\[\\]:;<>,.?~\\\\-]/ && /[0-9]/)) {\r\n         ele[0].style.marginBottom = \"0\";\r\n         userValidations.userPassword = \"Enter a valid Password\";\r\n      } else if (!data.userPassword.length >= 8) {\r\n         ele[0].style.marginBottom = \"0\";\r\n         userValidations.userPassword = \"Enter a valid Password\";\r\n      }\r\n      let con=!Object.keys(userValidations).includes(\"userPassword\");\r\n      con?ele[0].style.marginBottom = \"10px\":ele[0].style.marginBottom = \"0\";\r\n  \r\n      setErrors(userValidations);\r\n      return (Object.keys(userValidations).length === 0)?true:false;\r\n      \r\n   }\r\n\r\n\r\n\r\n}\r\n\r\nconst passwordJsSpan = () => {\r\n\r\n   const password = document.querySelector(\".loginPassword\").value;\r\n   const spanDetails = document.querySelectorAll(\".js-password\");\r\n   //min 8 charecters\r\n   (password.length >= 8) ? spanDetails[0].style.color = \"lightgreen\" : spanDetails[0].style.color = \"white\";\r\n   //lowerAndUpper\r\n   (password.match(/[A-Z]/) && password.match(/[a-z]/)) ? spanDetails[1].style.color = \"lightgreen\" : spanDetails[1].style.color = \"white\";\r\n   //spl charecters\r\n   (password.match(/[!@#$%^&*()_+{}\\[\\]:;<>,.?~\\\\-]/)) ? spanDetails[2].style.color = \"lightgreen\" : spanDetails[2].style.color = \"white\";\r\n   //spl charecters\r\n   (password.match(/[0-9]/)) ? spanDetails[3].style.color = \"lightgreen\" : spanDetails[3].style.color = \"white\";\r\n\r\n}\r\n\r\nconst display = () => {\r\n   document.getElementById(\"passwordValidspan\").style.display = \"block\";\r\n}\r\nconst displayoff = () => {\r\n   document.getElementById(\"passwordValidspan\").style.display = \"none\";\r\n}\r\n\r\n\r\n","C:\\Restaurent_react\\rome-restaurant\\src\\Dashboard\\Dashboard.jsx",["130"],[],"C:\\Restaurent_react\\rome-restaurant\\src\\components\\Order.js",[],[],"C:\\Restaurent_react\\rome-restaurant\\src\\components\\Cart.js",["131"],[],"C:\\Restaurent_react\\rome-restaurant\\src\\Dashboard\\Carousel.jsx",[],[],"C:\\Restaurent_react\\rome-restaurant\\src\\Utils\\CountryValid.jsx",[],[],"C:\\Restaurent_react\\rome-restaurant\\src\\Redux\\store.js",[],[],"C:\\Users\\Sai jadapalli\\Desktop\\rome-restaurant\\src\\index.js",[],[],[],"C:\\Users\\Sai jadapalli\\Desktop\\rome-restaurant\\src\\reportWebVitals.js",[],[],"C:\\Users\\Sai jadapalli\\Desktop\\rome-restaurant\\src\\App.js",["132","133","134","135","136","137","138","139"],[],"import { useEffect, useState } from 'react';\nimport './App.css';\nimport RegisterLogIn from './SignUp_SignIn/RegisterLogIn';\nimport { ClipLoader } from 'react-spinners';\nimport Dashboard from './Dashboard/Dashboard';\nimport Cart from './components/Cart';\nimport Order from './components/Order';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\n\n\n\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [selectedSubcategory, setSelectedSubcategory] = useState('');\n  const [filteredItems, setFilteredItems] = useState([]);\n  const [isOrderPlaced, setIsOrderPlaced] = useState(false);\n  const [item, setItems] = useState([]);\n \n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n      setData(<RegisterLogIn />)\n      setLoading(true)\n    }, 800);\n  }, [])\n  const handleCategoryChange = (category) => {\n    setSelectedCategory(category);\n    setFilteredItems([]);\n    setSelectedSubcategory('');\n  };\n\n  const handleSubcategoryChange = (subcategory) => {\n    setSelectedSubcategory(subcategory);\n    const itemsForSubcategory = item.filter((item) => item.subcategoryId === subcategory);\n    setFilteredItems(itemsForSubcategory);\n  };\n\n  const handlePlaceOrder = () => {\n    // Perform order placement logic, e.g., sending data to a server\n    setIsOrderPlaced(true);\n  };\n\n  return (\n\n    <>\n\n      {loading ? <Routes>\n        <Route path='/' element={<RegisterLogIn />} />\n        <Route path='/success' element={\n          <Dashboard  /> } />\n        <Route path='/cart' element={<Cart/>} />\n        <Route path='/place-order' element={<>\n          <Order onPlaceOrder={handlePlaceOrder} />\n          {isOrderPlaced && <p>Order placed successfully!</p>}</>} />\n      </Routes> || data : <div className='loadingJs'>\n        <ClipLoader color=\"#36d7b7\" size={50} />\n      </div>}\n\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\Sai jadapalli\\Desktop\\rome-restaurant\\src\\redux\\store.js",[],[],"C:\\Users\\Sai jadapalli\\Desktop\\rome-restaurant\\src\\components\\Cart.js",["140","141","142"],[],"C:\\Users\\Sai jadapalli\\Desktop\\rome-restaurant\\src\\SignUp_SignIn\\RegisterLogIn.js",["143","144","145"],[],"import React, { useState, useEffect } from \"react\";\r\nimport './RegisterLogIn.css'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckCircle, faEarthAmericas, faEnvelope, faLocationDot, faLock, faPhone, faThumbTack, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport WOW from 'wowjs';\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport CountryValid from \"../Utils/CountryValid\";\r\n\r\n\r\nexport default function RegisterLogIn() {\r\n   const [show, setshow] = useState(true);\r\n   const [data, setData] = useState({\r\n      userName: '',\r\n      userEmail: '',\r\n      userPhoneNo: '',\r\n      userCountry: '',\r\n      userAddress: '',\r\n      userPincode: '',\r\n      userPassword: ''\r\n   });\r\n\r\n   const [errors, setErrors] = useState({});\r\n   const navigate = useNavigate();\r\n\r\n   useEffect(() => {\r\n      new WOW.WOW({\r\n         live: false\r\n      }).init();\r\n      getUserDetails();\r\n\r\n   }, [])\r\n\r\n   const getUserDetails = async () => {\r\n      try {\r\n         const res = await axios.get(\"http://localhost:8081/v1/users\")\r\n         console.log(res.data)\r\n      } catch (error) {\r\n         console.log(error.message)\r\n      }\r\n   }\r\n\r\n   const handleChange = (e) => {\r\n\r\n      setData(prev => ({\r\n         ...prev,\r\n         [e.target.name]: e.target.value\r\n\r\n      }))\r\n\r\n   }\r\n\r\n\r\n\r\n   //REGISTER\r\n   const handleRegister = (e) => {\r\n      e.preventDefault();\r\n\r\n\r\n      // Replace with your API endpoint\r\n      const apiUrl = 'http://localhost:8081/v1/user/register';\r\n\r\n      // Replace with your Basic Authentication credentials\r\n      const username = 'ramesh';\r\n      const password = 'Ramesh#123';\r\n      const basicAuthHeader = 'Basic ' + btoa(username + ':' + password);\r\n\r\n      const valid = formValidations(data);\r\n      if (valid === true) {\r\n         axios.post(apiUrl, data, {\r\n            headers: {\r\n               'Content-Type': 'application/json', // Set the content type if needed\r\n               'Authorization': basicAuthHeader, // Add the Basic Authentication header\r\n            },\r\n         })\r\n            .then(response => {\r\n               if (response.data === false) {\r\n                  document.getElementById(\"UserValidate\").style.display = \"block\";\r\n               }else{\r\n\r\n                  document.getElementById(\"UserRegistered\").style.display = \"block\";\r\n\r\n               }\r\n\r\n            })\r\n            .catch(error => {\r\n               console.log('Error fetching data:', error.response.data);\r\n            });\r\n      }\r\n   }\r\n\r\n   //LogIn\r\n\r\n   const handleLogin = (e) => {\r\n\r\n      e.preventDefault();\r\n\r\n      // Replace with your API endpoint\r\n      const apiUrl = 'http://localhost:8081/v1/users/login';\r\n\r\n      // Replace with your Basic Authentication credentials\r\n      const username = 'ramesh';\r\n      const password = 'Ramesh#123';\r\n      const basicAuthHeader = 'Basic ' + btoa(username + ':' + password);\r\n      // const user = {\r\n      //    userEmail: \"ramesh\",\r\n      //    userPassword: \"ramesh\"\r\n      // }\r\n\r\n      axios.post(apiUrl, data, {\r\n         headers: {\r\n            'Content-Type': 'application/json', // Set the content type if needed\r\n            'Authorization': basicAuthHeader, // Add the Basic Authentication header\r\n         },\r\n      })\r\n         .then(response => {\r\n            // console.log(response.status)\r\n            if (response.data === true) {\r\n               return navigate('/success')\r\n            } else {\r\n               document.getElementById(\"EmailOrPAssValid\").style.display = \"block\";\r\n            }\r\n\r\n         })\r\n         .catch(error => {\r\n            console.log('Error fetching data:', error)\r\n         });\r\n   }\r\n\r\n\r\n\r\n\r\n   const hangleBtnToggle = (change) => {\r\n      const btnChange = document.querySelector(change);\r\n      if (!btnChange.classList.contains('.btnToggle')) {\r\n         turnOffPreviousBtn();\r\n         btnChange.classList.add('btnToggle');\r\n      } else {\r\n         btnChange.classList.remove('btnToggle');\r\n      }\r\n   }\r\n\r\n   function turnOffPreviousBtn() {\r\n      const previousChange = document.querySelector('.btnToggle');\r\n      if (previousChange) {\r\n         previousChange.classList.remove('btnToggle');\r\n      }\r\n   }\r\n   return (\r\n      <>\r\n         <div className=\"backGround\">\r\n            <section className=\"bg-transparent navbar-bg\">\r\n               <div className=\"container\">\r\n                  {/* <button onClick={() => setshow(true)} class=\"nav-item nav-link\" href=\"#\">Login</button>\r\n                        <button onClick={() => setshow(false)} class=\"nav-item nav-link\" >SignUp</button> */}\r\n                  <Navbar expand='md' className=\"bg-transparent\">\r\n                     <Container fluid className=\"bannerHeight\">\r\n                        <Navbar.Brand> <img src=\"/images/Rome-logo.png\" alt=\"\" /></Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n                        <Navbar.Collapse id=\"navbarScroll\">\r\n                           <Nav\r\n                              className=\"ms-auto \"\r\n                              style={{ maxHeight: '100px' }}\r\n                              navbarScroll\r\n                           >\r\n                              <button onClick={() => {\r\n                                 setshow(false);\r\n                                 hangleBtnToggle('.SignUpBtn')\r\n                              }} className=\"me-4 headerBtns SignUpBtn \" >SignUp</button>\r\n                              <button onClick={() => { setshow(true); hangleBtnToggle('.LogInBtn') }} className=\"headerBtns LogInBtn\" >Login</button>\r\n                           </Nav>\r\n                        </Navbar.Collapse>\r\n                     </Container>\r\n                  </Navbar>\r\n               </div>\r\n            </section>\r\n            <div className=\"registerOrLogin\">\r\n               <div className=\"register\">\r\n\r\n               </div>\r\n               <div className=\"login wow  pulse\">\r\n                  <h3 /* style={{color: \"red\"}}*/ className=\" text-center text-light mb-4\">{show ? \"CUSTOMER LOGIN\" : \"SIGN UP\"}</h3>\r\n                  <form>\r\n                     {show ?\r\n                        <>\r\n                           <div class=\"form-group formInput \">\r\n                              <div className=\"faIcons\"><FontAwesomeIcon icon={faEnvelope} className=\"facolors\" /></div>\r\n                              <div className=\"inputDiv\">\r\n                                 <input type=\"text\" onChange={handleChange} name=\"userEmail\" class=\"form-control  bg-transparent\" placeholder=\"Email\" />\r\n                              </div>\r\n                           </div>\r\n                           <div class=\"form-group formInput\">\r\n                              <div className=\"faIcons\"><FontAwesomeIcon icon={faLock} className=\"facolors\" /></div>\r\n                              <div className=\"inputDiv\">\r\n                                 <input type=\"password\" name=\"userPassword\" onChange={handleChange} className=\"form-control bg-transparent loginPassword\" placeholder=\"Password\" /*onKeyUp={passwordJsSpan} onFocus={display} onBlur={displayoff}*/ />\r\n                              </div>\r\n\r\n                           </div>\r\n                           <span id=\"EmailOrPAssValid\" >Please Enter Valid Email And Password</span>\r\n\r\n                           <div className=\"formBtn text-center\">\r\n                              <button type=\"submit\" onClick={handleLogin} class=\"btn text-light bg-danger rounded-0 btn-sm\">LOGIN</button>\r\n                           </div>\r\n                        </> :\r\n                        <>\r\n                           <div class=\"form-group formInput \">\r\n                              <div className=\"faIcons\"><FontAwesomeIcon icon={faUser} className=\"facolors\" /></div>\r\n                              <div className=\"inputDiv\">\r\n                                 <input type=\"text\" class=\"form-control  bg-transparent\" placeholder=\"Name\" name=\"userName\" onChange={handleChange} />\r\n                              </div>\r\n                           </div>\r\n                           <span className=\"errorSpan\">{errors.userName}</span>\r\n                           <div class=\"form-group formInput\">\r\n                              <div className=\"faIcons\"><FontAwesomeIcon icon={faEnvelope} className=\"facolors\" /></div>\r\n                              <div className=\"inputDiv\">\r\n                                 <input type=\"email\" class=\"form-control bg-transparent\" placeholder=\"Email\" name=\"userEmail\" onChange={handleChange} />\r\n                              </div>\r\n                           </div>\r\n                           <span className=\"errorSpan\">{errors.userEmail}</span>\r\n                           <div class=\"form-group formInput \">\r\n                              <div className=\"faIcons\"><FontAwesomeIcon icon={faPhone} className=\"facolors\" /></div>\r\n                              <div className=\"inputDiv\">\r\n                                 <input type=\"text\" class=\"form-control  bg-transparent\" placeholder=\"Phone\" name=\"userPhoneNo\" onChange={handleChange} />\r\n                              </div>\r\n                           </div>\r\n                           <span className=\"errorSpan\">{errors.userPhoneNo}</span>\r\n                           <div class=\"form-group formInput \">\r\n                              <div className=\"faIcons\"><FontAwesomeIcon icon={faEarthAmericas} className=\"facolors\" /></div>\r\n                              <div className=\"inputDiv\">\r\n                                 <input type=\"text\" class=\"form-control  bg-transparent\" placeholder=\"Country\" name=\"userCountry\" onChange={handleChange} />\r\n                              </div>\r\n                           </div>\r\n                           <span className=\"errorSpan\">{errors.userCountry}</span>\r\n                           <div class=\"form-group formInput \">\r\n                              <div className=\"faIcons\"><FontAwesomeIcon icon={faLocationDot} className=\"facolors\" /></div>\r\n                              <div className=\"inputDiv\">\r\n                                 <input type=\"text\" class=\"form-control  bg-transparent\" placeholder=\"Address\" name=\"userAddress\" onChange={handleChange} />\r\n                              </div>\r\n                           </div>\r\n                           <span className=\"errorSpan\">{errors.userAddress}</span>\r\n                           <div class=\"form-group formInput \">\r\n                              <div className=\"faIcons\"><FontAwesomeIcon icon={faThumbTack} className=\"facolors\" /></div>\r\n                              <div className=\"inputDiv\">\r\n                                 <input type=\"text\" class=\"form-control  bg-transparent\" placeholder=\"Pincode\" name=\"userPincode\" onChange={handleChange} />\r\n                              </div>\r\n                           </div>\r\n                           <span className=\"errorSpan\">{errors.userPincode}</span>\r\n                           <div class=\"form-group formInput \">\r\n                              <div className=\"faIcons\"><FontAwesomeIcon icon={faLock} className=\"facolors\" /></div>\r\n                              <div className=\"inputDiv\">\r\n                                 <input type=\"password\" name=\"userPassword\" onChange={handleChange} className=\"form-control bg-transparent loginPassword\" placeholder=\"Password\" onKeyUp={passwordJsSpan} onKeyDown={display} onMouseLeave={displayoff} />\r\n                              </div>\r\n                           </div>\r\n                           <span className=\"errorSpan\">{errors.userPassword}</span>\r\n                           <span></span>\r\n                           <span id=\"passwordValidspan\">\r\n                              <span className=\"js-password\">- should contain min 8 charecters.</span><br />\r\n                              <span className=\"js-password\">- should contain lower and upper-cases. </span><br />\r\n                              <span className=\"js-password\">- should contain special charecters.</span><br />\r\n                              <span className=\"js-password\">- should contain atleast one number.</span>\r\n                           </span>\r\n\r\n\r\n                           <div className=\"formBtn text-center\">\r\n                              <button type=\"submit\" class=\"btn text-light bg-danger rounded-0 btn-sm\" onClick={handleRegister}>Register</button>\r\n                           </div>\r\n                           <span id=\"UserValidate\">user already exist please login</span>\r\n                           <span id=\"UserRegistered\">Registered Successfully<FontAwesomeIcon style={{ color: \"rgb(39, 224, 39)\", marginLeft: \"5\" }} icon={faCheckCircle} /></span>\r\n\r\n                        </>\r\n                     }\r\n                  </form>\r\n               </div>\r\n               <div className=\"registerdiv mt-3 text-center text-light\">\r\n                  <small >{show ? \"Don't have an account\" : \"Already have an account\"}</small>\r\n                  <div className=\"heCreateAcc mt-1 \">\r\n                     {show ?\r\n                        <button onClick={() => setshow(false)}\r\n                           className=\"btn btn-outline-light btn-sm fw-bold rounded-0  \">Create Account Now</button> : <button onClick={() => setshow(true)} className=\"btn btn-outline-light btn-sm fw-bold rounded-0  \">LogIn Here\r\n                        </button>}\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </>\r\n   )\r\n   function formValidations(data) {\r\n      const validCountries = CountryValid();\r\n      const userValidations = {};\r\n      const fieldIsRequired = \"Field Is Required\"\r\n      //UserName\r\n      if (!data.userName.trim()) {\r\n         userValidations.userName = fieldIsRequired;\r\n      }\r\n       //UserEmail\r\n      if (!data.userEmail.trim()) {\r\n         userValidations.userEmail = fieldIsRequired;\r\n      } else if (!data.userEmail.trim().match(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{3}$/)) {\r\n         userValidations.userEmail = \"Enter Valid Email\";\r\n      }\r\n       //UserPhonneno\r\n      if (!data.userPhoneNo.trim()) {\r\n         userValidations.userPhoneNo = fieldIsRequired;\r\n      } else if (!data.userPhoneNo.trim().match(/^[0-9]{10}$/)) {\r\n         userValidations.userPhoneNo = \"Enter Valid PhoneNo\";\r\n      }\r\n       //UserCountry\r\n      if (!data.userCountry.trim()) {\r\n         userValidations.userCountry = fieldIsRequired;\r\n      } else if (!validCountries.test(data.userCountry.trim())) {\r\n         userValidations.userCountry = \"Enter a valid country\";\r\n      }\r\n       //UserAddress\r\n      if (!data.userAddress.trim()) {\r\n         userValidations.userAddress = fieldIsRequired;\r\n      }\r\n\r\n       //UserPincode\r\n      if (!data.userPincode.trim()) {\r\n         userValidations.userPincode = fieldIsRequired;\r\n      } else if (!data.userPincode.trim().match(/^[0-9]/)) {\r\n         userValidations.userPincode = \"Enter a valid Pincode\";\r\n      }\r\n      //UserPassWord\r\n      const ele = document.getElementsByClassName(\"loginPassword\");\r\n      if (!data.userPassword.trim()) {\r\n         ele[0].style.marginBottom = \"0\";\r\n         userValidations.userPassword = fieldIsRequired;\r\n      } else if (!data.userPassword.trim().match(/[A-Z]/ && /[a-z]/ && /[!@#$%^&*()_+{}\\[\\]:;<>,.?~\\\\-]/ && /[0-9]/)) {\r\n         ele[0].style.marginBottom = \"0\";\r\n         userValidations.userPassword = \"Enter a valid Password\";\r\n      } else if (!data.userPassword.length >= 8) {\r\n         ele[0].style.marginBottom = \"0\";\r\n         userValidations.userPassword = \"Enter a valid Password\";\r\n      }\r\n      let con=!Object.keys(userValidations).includes(\"userPassword\");\r\n      con?ele[0].style.marginBottom = \"10px\":ele[0].style.marginBottom = \"0\";\r\n  \r\n      setErrors(userValidations);\r\n      return (Object.keys(userValidations).length === 0)?true:false;\r\n      \r\n   }\r\n\r\n\r\n\r\n}\r\n\r\nconst passwordJsSpan = () => {\r\n\r\n   const password = document.querySelector(\".loginPassword\").value;\r\n   const spanDetails = document.querySelectorAll(\".js-password\");\r\n   //min 8 charecters\r\n   (password.length >= 8) ? spanDetails[0].style.color = \"lightgreen\" : spanDetails[0].style.color = \"white\";\r\n   //lowerAndUpper\r\n   (password.match(/[A-Z]/) && password.match(/[a-z]/)) ? spanDetails[1].style.color = \"lightgreen\" : spanDetails[1].style.color = \"white\";\r\n   //spl charecters\r\n   (password.match(/[!@#$%^&*()_+{}\\[\\]:;<>,.?~\\\\-]/)) ? spanDetails[2].style.color = \"lightgreen\" : spanDetails[2].style.color = \"white\";\r\n   //spl charecters\r\n   (password.match(/[0-9]/)) ? spanDetails[3].style.color = \"lightgreen\" : spanDetails[3].style.color = \"white\";\r\n\r\n}\r\n\r\nconst display = () => {\r\n   document.getElementById(\"passwordValidspan\").style.display = \"block\";\r\n}\r\nconst displayoff = () => {\r\n   document.getElementById(\"passwordValidspan\").style.display = \"none\";\r\n}\r\n\r\n\r\n","C:\\Users\\Sai jadapalli\\Desktop\\rome-restaurant\\src\\components\\Order.js",[],[],"C:\\Users\\Sai jadapalli\\Desktop\\rome-restaurant\\src\\Dashboard\\Dashboard.jsx",[],[],"C:\\Users\\Sai jadapalli\\Desktop\\rome-restaurant\\src\\redux\\reducers\\cartReducer.js",[],[],"C:\\Users\\Sai jadapalli\\Desktop\\rome-restaurant\\src\\Utils\\CountryValid.jsx",[],[],"C:\\Users\\Sai jadapalli\\Desktop\\rome-restaurant\\src\\Dashboard\\Carousel.jsx",[],[],"C:\\Users\\Sai jadapalli\\Desktop\\rome-restaurant\\src\\redux\\actions\\cartActions.js",[],[],{"ruleId":"146","severity":1,"message":"147","line":19,"column":10,"nodeType":"148","messageId":"149","endLine":19,"endColumn":26},{"ruleId":"146","severity":1,"message":"150","line":20,"column":10,"nodeType":"148","messageId":"149","endLine":20,"endColumn":29},{"ruleId":"146","severity":1,"message":"151","line":21,"column":10,"nodeType":"148","messageId":"149","endLine":21,"endColumn":23},{"ruleId":"146","severity":1,"message":"152","line":25,"column":9,"nodeType":"148","messageId":"149","endLine":25,"endColumn":17},{"ruleId":"146","severity":1,"message":"153","line":34,"column":9,"nodeType":"148","messageId":"149","endLine":34,"endColumn":17},{"ruleId":"146","severity":1,"message":"154","line":43,"column":9,"nodeType":"148","messageId":"149","endLine":43,"endColumn":29},{"ruleId":"146","severity":1,"message":"155","line":49,"column":9,"nodeType":"148","messageId":"149","endLine":49,"endColumn":32},{"ruleId":"146","severity":1,"message":"156","line":108,"column":13,"nodeType":"148","messageId":"149","endLine":108,"endColumn":17},{"ruleId":"157","severity":1,"message":"158","line":301,"column":53,"nodeType":"159","messageId":"160","endLine":301,"endColumn":54,"suggestions":"161"},{"ruleId":"157","severity":1,"message":"162","line":332,"column":88,"nodeType":"159","messageId":"160","endLine":332,"endColumn":89,"suggestions":"163"},{"ruleId":"157","severity":1,"message":"162","line":360,"column":36,"nodeType":"159","messageId":"160","endLine":360,"endColumn":37,"suggestions":"164"},{"ruleId":"146","severity":1,"message":"165","line":11,"column":22,"nodeType":"148","messageId":"149","endLine":11,"endColumn":35},{"ruleId":"146","severity":1,"message":"166","line":12,"column":9,"nodeType":"148","messageId":"149","endLine":12,"endColumn":19},{"ruleId":"146","severity":1,"message":"167","line":8,"column":8,"nodeType":"148","messageId":"149","endLine":8,"endColumn":13},{"ruleId":"146","severity":1,"message":"168","line":11,"column":25,"nodeType":"148","messageId":"149","endLine":11,"endColumn":36},{"ruleId":"146","severity":1,"message":"147","line":19,"column":10,"nodeType":"148","messageId":"149","endLine":19,"endColumn":26},{"ruleId":"146","severity":1,"message":"150","line":20,"column":10,"nodeType":"148","messageId":"149","endLine":20,"endColumn":29},{"ruleId":"146","severity":1,"message":"151","line":21,"column":10,"nodeType":"148","messageId":"149","endLine":21,"endColumn":23},{"ruleId":"146","severity":1,"message":"169","line":23,"column":16,"nodeType":"148","messageId":"149","endLine":23,"endColumn":24},{"ruleId":"146","severity":1,"message":"154","line":33,"column":9,"nodeType":"148","messageId":"149","endLine":33,"endColumn":29},{"ruleId":"146","severity":1,"message":"155","line":39,"column":9,"nodeType":"148","messageId":"149","endLine":39,"endColumn":32},{"ruleId":"146","severity":1,"message":"170","line":2,"column":8,"nodeType":"148","messageId":"149","endLine":2,"endColumn":17},{"ruleId":"146","severity":1,"message":"171","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":11},{"ruleId":"146","severity":1,"message":"172","line":4,"column":8,"nodeType":"148","messageId":"149","endLine":4,"endColumn":14},{"ruleId":"157","severity":1,"message":"158","line":301,"column":53,"nodeType":"159","messageId":"160","endLine":301,"endColumn":54,"suggestions":"173"},{"ruleId":"157","severity":1,"message":"162","line":332,"column":88,"nodeType":"159","messageId":"160","endLine":332,"endColumn":89,"suggestions":"174"},{"ruleId":"157","severity":1,"message":"162","line":360,"column":36,"nodeType":"159","messageId":"160","endLine":360,"endColumn":37,"suggestions":"175"},"no-unused-vars","'selectedCategory' is assigned a value but never used.","Identifier","unusedVar","'selectedSubcategory' is assigned a value but never used.","'filteredItems' is assigned a value but never used.","'navigate' is assigned a value but never used.","'getItems' is assigned a value but never used.","'handleCategoryChange' is assigned a value but never used.","'handleSubcategoryChange' is assigned a value but never used.","'user' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["176","177"],"Unnecessary escape character: \\[.",["178","179"],["180","181"],"'faCircleCheck' is defined but never used.","'totalItems' is assigned a value but never used.","'axios' is defined but never used.","'useNavigate' is defined but never used.","'setItems' is assigned a value but never used.","'Container' is defined but never used.","'Nav' is defined but never used.","'Navbar' is defined but never used.",["182","183"],["184","185"],["186","187"],{"messageId":"188","fix":"189","desc":"190"},{"messageId":"191","fix":"192","desc":"193"},{"messageId":"188","fix":"194","desc":"190"},{"messageId":"191","fix":"195","desc":"193"},{"messageId":"188","fix":"196","desc":"190"},{"messageId":"191","fix":"197","desc":"193"},{"messageId":"188","fix":"198","desc":"190"},{"messageId":"191","fix":"199","desc":"193"},{"messageId":"188","fix":"200","desc":"190"},{"messageId":"191","fix":"201","desc":"193"},{"messageId":"188","fix":"202","desc":"190"},{"messageId":"191","fix":"203","desc":"193"},"removeEscape",{"range":"204","text":"205"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"206","text":"207"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"208","text":"205"},{"range":"209","text":"207"},{"range":"210","text":"205"},{"range":"211","text":"207"},{"range":"212","text":"205"},{"range":"213","text":"207"},{"range":"214","text":"205"},{"range":"215","text":"207"},{"range":"216","text":"205"},{"range":"217","text":"207"},[14063,14064],"",[14063,14063],"\\",[15382,15383],[15382,15382],[16502,16503],[16502,16502],[14075,14076],[14075,14075],[15394,15395],[15394,15394],[16514,16515],[16514,16514]]